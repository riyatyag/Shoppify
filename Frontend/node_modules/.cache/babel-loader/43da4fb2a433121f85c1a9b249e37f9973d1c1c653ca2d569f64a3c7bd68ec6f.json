{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\E-Commerce\\\\Frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\n// import React, { createContext, useEffect, useState } from \"react\";\n// import all_product from \"../Components/Assets/all_product\";\n// import axios from \"axios\";\n\n// export const ShopContext = createContext(null);\n\n// const getDefaultCart = () => {\n//   let cart = {};\n//   for (let index = 0; index < all_product.length + 1; index++) {\n//     cart[index] = 0;\n//   }\n//   return cart;\n// };\n\n// const ShopContextProvider = (props) => {\n//   const [cartItems, setCartItems] = useState(getDefaultCart);\n\n//   const token = localStorage.getItem(\"auth-token\");\n\n//   // Fetch cart from backend on mount\n//   useEffect(() => {\n//     const fetchCart = async () => {\n//       try {\n//         const res = await axios.post(\"http://localhost:4001/getcart\", {}, {\n//           headers: { \"auth-token\": token },\n//         });\n//         setCartItems(res.data);\n//       } catch (err) {\n//         console.error(\"Error fetching cart:\", err);\n//       }\n//     };\n\n//     if (token) fetchCart();\n//   }, [token]);\n\n//   const addToCart = async (itemId) => {\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:4001/addtocart\",\n//         { itemId },\n//         { headers: { \"auth-token\": token } }\n//       );\n//       setCartItems(res.data.cartData);\n//     } catch (err) {\n//       console.error(\"Error adding to cart:\", err);\n//     }\n//   };\n\n//   const removeFromCart = async (itemId) => {\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:4001/removefromcart\",\n//         { itemId },\n//         { headers: { \"auth-token\": token } }\n//       );\n//       setCartItems(res.data.cartData);\n//     } catch (err) {\n//       console.error(\"Error removing from cart:\", err);\n//     }\n//   };\n\n//   const getTotalCartAmount = () => {\n//     let totalAmount = 0;\n//     for (const item in cartItems) {\n//       if (cartItems[item] > 0) {\n//         const itemInfo = all_product.find(\n//           (product) => product.id === Number(item)\n//         );\n//         if (itemInfo) {\n//           totalAmount += itemInfo.new_price * cartItems[item];\n//         }\n//       }\n//     }\n//     return totalAmount;\n//   };\n\n//   const getTotalCartItems = () => {\n//     let totalItem = 0;\n//     for (const item in cartItems) {\n//       totalItem += cartItems[item];\n//     }\n//     return totalItem;\n//   };\n\n//   const contextValue = {\n//     all_product,\n//     cartItems,\n//     addToCart,\n//     removeFromCart,\n//     getTotalCartAmount,\n//     getTotalCartItems,\n//   };\n\n//   return (\n//     <ShopContext.Provider value={contextValue}>\n//       {props.children}\n//     </ShopContext.Provider>\n//   );\n// };\n\n// export default ShopContextProvider;\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport all_product from \"../Components/Assets/all_product\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst ShopContextProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem(\"auth-token\"));\n  const token = localStorage.getItem(\"auth-token\");\n\n  // Fetch cart from backend when logged in\n  useEffect(() => {\n    const fetchCart = async () => {\n      try {\n        const res = await axios.post(\"http://localhost:4001/getcart\", {}, {\n          headers: {\n            \"auth-token\": token\n          }\n        });\n        setCartItems(res.data || {});\n      } catch (err) {\n        console.error(\"Error fetching cart:\", err);\n      }\n    };\n    if (token) {\n      setIsLoggedIn(true);\n      fetchCart();\n    }\n  }, [token]);\n  const addToCart = async itemId => {\n    if (!token) {\n      alert(\"Please log in to add items to cart.\");\n      return;\n    }\n    try {\n      const res = await axios.post(\"http://localhost:4001/addtocart\", {\n        itemId\n      }, {\n        headers: {\n          \"auth-token\": token\n        }\n      });\n      setCartItems(res.data.cartData);\n    } catch (err) {\n      console.error(\"Error adding to cart:\", err);\n    }\n  };\n  const removeFromCart = async itemId => {\n    if (!token) {\n      alert(\"Please log in to remove items from cart.\");\n      return;\n    }\n    try {\n      const res = await axios.post(\"http://localhost:4001/removefromcart\", {\n        itemId\n      }, {\n        headers: {\n          \"auth-token\": token\n        }\n      });\n      setCartItems(res.data.cartData);\n    } catch (err) {\n      console.error(\"Error removing from cart:\", err);\n    }\n  };\n  const getTotalCartAmount = () => {\n    let total = 0;\n    for (const item in cartItems) {\n      const product = all_product.find(p => p.id === Number(item));\n      if (product) {\n        total += product.new_price * cartItems[item];\n      }\n    }\n    return total;\n  };\n  const getTotalCartItems = () => {\n    return Object.values(cartItems).reduce((a, b) => a + b, 0);\n  };\n  const logout = () => {\n    localStorage.removeItem(\"auth-token\");\n    setIsLoggedIn(false);\n    setCartItems({});\n  };\n  const contextValue = {\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart,\n    getTotalCartAmount,\n    getTotalCartItems,\n    isLoggedIn,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"QI64xAovO9dun5RuG1JCG0xo20k=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","all_product","axios","jsxDEV","_jsxDEV","ShopContext","ShopContextProvider","children","_s","cartItems","setCartItems","isLoggedIn","setIsLoggedIn","localStorage","getItem","token","fetchCart","res","post","headers","data","err","console","error","addToCart","itemId","alert","cartData","removeFromCart","getTotalCartAmount","total","item","product","find","p","id","Number","new_price","getTotalCartItems","Object","values","reduce","a","b","logout","removeItem","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/E-Commerce/Frontend/src/Context/ShopContext.jsx"],"sourcesContent":["// import React, { createContext, useEffect, useState } from \"react\";\r\n// import all_product from \"../Components/Assets/all_product\";\r\n// import axios from \"axios\";\r\n\r\n// export const ShopContext = createContext(null);\r\n\r\n// const getDefaultCart = () => {\r\n//   let cart = {};\r\n//   for (let index = 0; index < all_product.length + 1; index++) {\r\n//     cart[index] = 0;\r\n//   }\r\n//   return cart;\r\n// };\r\n\r\n// const ShopContextProvider = (props) => {\r\n//   const [cartItems, setCartItems] = useState(getDefaultCart);\r\n\r\n//   const token = localStorage.getItem(\"auth-token\");\r\n\r\n//   // Fetch cart from backend on mount\r\n//   useEffect(() => {\r\n//     const fetchCart = async () => {\r\n//       try {\r\n//         const res = await axios.post(\"http://localhost:4001/getcart\", {}, {\r\n//           headers: { \"auth-token\": token },\r\n//         });\r\n//         setCartItems(res.data);\r\n//       } catch (err) {\r\n//         console.error(\"Error fetching cart:\", err);\r\n//       }\r\n//     };\r\n\r\n//     if (token) fetchCart();\r\n//   }, [token]);\r\n\r\n//   const addToCart = async (itemId) => {\r\n//     try {\r\n//       const res = await axios.post(\r\n//         \"http://localhost:4001/addtocart\",\r\n//         { itemId },\r\n//         { headers: { \"auth-token\": token } }\r\n//       );\r\n//       setCartItems(res.data.cartData);\r\n//     } catch (err) {\r\n//       console.error(\"Error adding to cart:\", err);\r\n//     }\r\n//   };\r\n\r\n//   const removeFromCart = async (itemId) => {\r\n//     try {\r\n//       const res = await axios.post(\r\n//         \"http://localhost:4001/removefromcart\",\r\n//         { itemId },\r\n//         { headers: { \"auth-token\": token } }\r\n//       );\r\n//       setCartItems(res.data.cartData);\r\n//     } catch (err) {\r\n//       console.error(\"Error removing from cart:\", err);\r\n//     }\r\n//   };\r\n\r\n//   const getTotalCartAmount = () => {\r\n//     let totalAmount = 0;\r\n//     for (const item in cartItems) {\r\n//       if (cartItems[item] > 0) {\r\n//         const itemInfo = all_product.find(\r\n//           (product) => product.id === Number(item)\r\n//         );\r\n//         if (itemInfo) {\r\n//           totalAmount += itemInfo.new_price * cartItems[item];\r\n//         }\r\n//       }\r\n//     }\r\n//     return totalAmount;\r\n//   };\r\n\r\n//   const getTotalCartItems = () => {\r\n//     let totalItem = 0;\r\n//     for (const item in cartItems) {\r\n//       totalItem += cartItems[item];\r\n//     }\r\n//     return totalItem;\r\n//   };\r\n\r\n//   const contextValue = {\r\n//     all_product,\r\n//     cartItems,\r\n//     addToCart,\r\n//     removeFromCart,\r\n//     getTotalCartAmount,\r\n//     getTotalCartItems,\r\n//   };\r\n\r\n//   return (\r\n//     <ShopContext.Provider value={contextValue}>\r\n//       {props.children}\r\n//     </ShopContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export default ShopContextProvider;\r\n\r\n\r\nimport React, { createContext, useEffect, useState } from \"react\";\r\nimport all_product from \"../Components/Assets/all_product\";\r\nimport axios from \"axios\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst ShopContextProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState({});\r\n  const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem(\"auth-token\"));\r\n\r\n  const token = localStorage.getItem(\"auth-token\");\r\n\r\n  // Fetch cart from backend when logged in\r\n  useEffect(() => {\r\n    const fetchCart = async () => {\r\n      try {\r\n        const res = await axios.post(\"http://localhost:4001/getcart\", {}, {\r\n          headers: { \"auth-token\": token },\r\n        });\r\n        setCartItems(res.data || {});\r\n      } catch (err) {\r\n        console.error(\"Error fetching cart:\", err);\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      setIsLoggedIn(true);\r\n      fetchCart();\r\n    }\r\n  }, [token]);\r\n\r\n  const addToCart = async (itemId) => {\r\n    if (!token) {\r\n      alert(\"Please log in to add items to cart.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:4001/addtocart\", { itemId }, {\r\n        headers: { \"auth-token\": token },\r\n      });\r\n      setCartItems(res.data.cartData);\r\n    } catch (err) {\r\n      console.error(\"Error adding to cart:\", err);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = async (itemId) => {\r\n    if (!token) {\r\n      alert(\"Please log in to remove items from cart.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:4001/removefromcart\", { itemId }, {\r\n        headers: { \"auth-token\": token },\r\n      });\r\n      setCartItems(res.data.cartData);\r\n    } catch (err) {\r\n      console.error(\"Error removing from cart:\", err);\r\n    }\r\n  };\r\n\r\n  const getTotalCartAmount = () => {\r\n    let total = 0;\r\n    for (const item in cartItems) {\r\n      const product = all_product.find(p => p.id === Number(item));\r\n      if (product) {\r\n        total += product.new_price * cartItems[item];\r\n      }\r\n    }\r\n    return total;\r\n  };\r\n\r\n  const getTotalCartItems = () => {\r\n    return Object.values(cartItems).reduce((a, b) => a + b, 0);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"auth-token\");\r\n    setIsLoggedIn(false);\r\n    setCartItems({});\r\n  };\r\n\r\n  const contextValue = {\r\n    all_product,\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    getTotalCartAmount,\r\n    getTotalCartItems,\r\n    isLoggedIn,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}