{"ast":null,"code":"// import React, { createContext, useEffect, useState } from \"react\";\n// import all_product from \"../Components/Assets/all_product\";\n// import axios from \"axios\";\n\n// export const ShopContext = createContext(null);\n\n// const getDefaultCart = () => {\n//   let cart = {};\n//   for (let index = 0; index < all_product.length + 1; index++) {\n//     cart[index] = 0;\n//   }\n//   return cart;\n// };\n\n// const ShopContextProvider = (props) => {\n//   const [cartItems, setCartItems] = useState(getDefaultCart);\n\n//   const token = localStorage.getItem(\"auth-token\");\n\n//   // Fetch cart from backend on mount\n//   useEffect(() => {\n//     const fetchCart = async () => {\n//       try {\n//         const res = await axios.post(\"http://localhost:4001/getcart\", {}, {\n//           headers: { \"auth-token\": token },\n//         });\n//         setCartItems(res.data);\n//       } catch (err) {\n//         console.error(\"Error fetching cart:\", err);\n//       }\n//     };\n\n//     if (token) fetchCart();\n//   }, [token]);\n\n//   const addToCart = async (itemId) => {\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:4001/addtocart\",\n//         { itemId },\n//         { headers: { \"auth-token\": token } }\n//       );\n//       setCartItems(res.data.cartData);\n//     } catch (err) {\n//       console.error(\"Error adding to cart:\", err);\n//     }\n//   };\n\n//   const removeFromCart = async (itemId) => {\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:4001/removefromcart\",\n//         { itemId },\n//         { headers: { \"auth-token\": token } }\n//       );\n//       setCartItems(res.data.cartData);\n//     } catch (err) {\n//       console.error(\"Error removing from cart:\", err);\n//     }\n//   };\n\n//   const getTotalCartAmount = () => {\n//     let totalAmount = 0;\n//     for (const item in cartItems) {\n//       if (cartItems[item] > 0) {\n//         const itemInfo = all_product.find(\n//           (product) => product.id === Number(item)\n//         );\n//         if (itemInfo) {\n//           totalAmount += itemInfo.new_price * cartItems[item];\n//         }\n//       }\n//     }\n//     return totalAmount;\n//   };\n\n//   const getTotalCartItems = () => {\n//     let totalItem = 0;\n//     for (const item in cartItems) {\n//       totalItem += cartItems[item];\n//     }\n//     return totalItem;\n//   };\n\n//   const contextValue = {\n//     all_product,\n//     cartItems,\n//     addToCart,\n//     removeFromCart,\n//     getTotalCartAmount,\n//     getTotalCartItems,\n//   };\n\n//   return (\n//     <ShopContext.Provider value={contextValue}>\n//       {props.children}\n//     </ShopContext.Provider>\n//   );\n// };\n\n// export default ShopContextProvider;","map":{"version":3,"names":[],"sources":["C:/Users/DELL/Desktop/E-Commerce/Frontend/src/Context/ShopContext.jsx"],"sourcesContent":["// import React, { createContext, useEffect, useState } from \"react\";\r\n// import all_product from \"../Components/Assets/all_product\";\r\n// import axios from \"axios\";\r\n\r\n// export const ShopContext = createContext(null);\r\n\r\n// const getDefaultCart = () => {\r\n//   let cart = {};\r\n//   for (let index = 0; index < all_product.length + 1; index++) {\r\n//     cart[index] = 0;\r\n//   }\r\n//   return cart;\r\n// };\r\n\r\n// const ShopContextProvider = (props) => {\r\n//   const [cartItems, setCartItems] = useState(getDefaultCart);\r\n\r\n//   const token = localStorage.getItem(\"auth-token\");\r\n\r\n//   // Fetch cart from backend on mount\r\n//   useEffect(() => {\r\n//     const fetchCart = async () => {\r\n//       try {\r\n//         const res = await axios.post(\"http://localhost:4001/getcart\", {}, {\r\n//           headers: { \"auth-token\": token },\r\n//         });\r\n//         setCartItems(res.data);\r\n//       } catch (err) {\r\n//         console.error(\"Error fetching cart:\", err);\r\n//       }\r\n//     };\r\n\r\n//     if (token) fetchCart();\r\n//   }, [token]);\r\n\r\n//   const addToCart = async (itemId) => {\r\n//     try {\r\n//       const res = await axios.post(\r\n//         \"http://localhost:4001/addtocart\",\r\n//         { itemId },\r\n//         { headers: { \"auth-token\": token } }\r\n//       );\r\n//       setCartItems(res.data.cartData);\r\n//     } catch (err) {\r\n//       console.error(\"Error adding to cart:\", err);\r\n//     }\r\n//   };\r\n\r\n//   const removeFromCart = async (itemId) => {\r\n//     try {\r\n//       const res = await axios.post(\r\n//         \"http://localhost:4001/removefromcart\",\r\n//         { itemId },\r\n//         { headers: { \"auth-token\": token } }\r\n//       );\r\n//       setCartItems(res.data.cartData);\r\n//     } catch (err) {\r\n//       console.error(\"Error removing from cart:\", err);\r\n//     }\r\n//   };\r\n\r\n//   const getTotalCartAmount = () => {\r\n//     let totalAmount = 0;\r\n//     for (const item in cartItems) {\r\n//       if (cartItems[item] > 0) {\r\n//         const itemInfo = all_product.find(\r\n//           (product) => product.id === Number(item)\r\n//         );\r\n//         if (itemInfo) {\r\n//           totalAmount += itemInfo.new_price * cartItems[item];\r\n//         }\r\n//       }\r\n//     }\r\n//     return totalAmount;\r\n//   };\r\n\r\n//   const getTotalCartItems = () => {\r\n//     let totalItem = 0;\r\n//     for (const item in cartItems) {\r\n//       totalItem += cartItems[item];\r\n//     }\r\n//     return totalItem;\r\n//   };\r\n\r\n//   const contextValue = {\r\n//     all_product,\r\n//     cartItems,\r\n//     addToCart,\r\n//     removeFromCart,\r\n//     getTotalCartAmount,\r\n//     getTotalCartItems,\r\n//   };\r\n\r\n//   return (\r\n//     <ShopContext.Provider value={contextValue}>\r\n//       {props.children}\r\n//     </ShopContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export default ShopContextProvider;\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}