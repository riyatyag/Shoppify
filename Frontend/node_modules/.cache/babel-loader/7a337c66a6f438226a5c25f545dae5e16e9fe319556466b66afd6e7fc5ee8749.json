{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\E-Commerce\\\\Frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\n// import React, { createContext, useEffect, useState } from \"react\";\n// import all_product from \"../Components/Assets/all_product\";\n// import axios from \"axios\";\n\n// export const ShopContext = createContext(null);\n\n// const getDefaultCart = () => {\n//   let cart = {};\n//   for (let index = 0; index < all_product.length + 1; index++) {\n//     cart[index] = 0;\n//   }\n//   return cart;\n// };\n\n// const ShopContextProvider = (props) => {\n//   const [cartItems, setCartItems] = useState(getDefaultCart);\n\n//   const token = localStorage.getItem(\"auth-token\");\n\n//   // Fetch cart from backend on mount\n//   useEffect(() => {\n//     const fetchCart = async () => {\n//       try {\n//         const res = await axios.post(\"http://localhost:4001/getcart\", {}, {\n//           headers: { \"auth-token\": token },\n//         });\n//         setCartItems(res.data);\n//       } catch (err) {\n//         console.error(\"Error fetching cart:\", err);\n//       }\n//     };\n\n//     if (token) fetchCart();\n//   }, [token]);\n\n//   const addToCart = async (itemId) => {\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:4001/addtocart\",\n//         { itemId },\n//         { headers: { \"auth-token\": token } }\n//       );\n//       setCartItems(res.data.cartData);\n//     } catch (err) {\n//       console.error(\"Error adding to cart:\", err);\n//     }\n//   };\n\n//   const removeFromCart = async (itemId) => {\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:4001/removefromcart\",\n//         { itemId },\n//         { headers: { \"auth-token\": token } }\n//       );\n//       setCartItems(res.data.cartData);\n//     } catch (err) {\n//       console.error(\"Error removing from cart:\", err);\n//     }\n//   };\n\n//   const getTotalCartAmount = () => {\n//     let totalAmount = 0;\n//     for (const item in cartItems) {\n//       if (cartItems[item] > 0) {\n//         const itemInfo = all_product.find(\n//           (product) => product.id === Number(item)\n//         );\n//         if (itemInfo) {\n//           totalAmount += itemInfo.new_price * cartItems[item];\n//         }\n//       }\n//     }\n//     return totalAmount;\n//   };\n\n//   const getTotalCartItems = () => {\n//     let totalItem = 0;\n//     for (const item in cartItems) {\n//       totalItem += cartItems[item];\n//     }\n//     return totalItem;\n//   };\n\n//   const contextValue = {\n//     all_product,\n//     cartItems,\n//     addToCart,\n//     removeFromCart,\n//     getTotalCartAmount,\n//     getTotalCartItems,\n//   };\n\n//   return (\n//     <ShopContext.Provider value={contextValue}>\n//       {props.children}\n//     </ShopContext.Provider>\n//   );\n// };\n\n// export default ShopContextProvider;\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport all_product from \"../Components/Assets/all_product\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst ShopContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const token = localStorage.getItem(\"auth-token\");\n  useEffect(() => {\n    if (token) {\n      setIsLoggedIn(true);\n      axios.post(\"http://localhost:4001/getcart\", {}, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => setCartItems(res.data)).catch(console.error);\n    }\n  }, [token]);\n  const login = token => {\n    localStorage.setItem(\"auth-token\", token);\n    setIsLoggedIn(true);\n    axios.post(\"http://localhost:4001/getcart\", {}, {\n      headers: {\n        \"auth-token\": token\n      }\n    }).then(res => setCartItems(res.data)).catch(console.error);\n  };\n  const logout = () => {\n    localStorage.removeItem(\"auth-token\");\n    setIsLoggedIn(false);\n    setCartItems({});\n  };\n  const addToCart = async itemId => {\n    if (!isLoggedIn) return;\n    try {\n      const res = await axios.post(\"http://localhost:4001/addtocart\", {\n        itemId\n      }, {\n        headers: {\n          \"auth-token\": token\n        }\n      });\n      setCartItems(res.data.cartData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const removeFromCart = async itemId => {\n    if (!isLoggedIn) return;\n    try {\n      const res = await axios.post(\"http://localhost:4001/removefromcart\", {\n        itemId\n      }, {\n        headers: {\n          \"auth-token\": token\n        }\n      });\n      setCartItems(res.data.cartData);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const getTotalCartItems = () => Object.values(cartItems).reduce((a, b) => a + b, 0);\n  const getTotalCartAmount = () => {\n    let total = 0;\n    Object.entries(cartItems).forEach(([item, qty]) => {\n      if (qty > 0) {\n        const p = all_product.find(pr => pr.id === Number(item));\n        total += ((p === null || p === void 0 ? void 0 : p.new_price) || 0) * qty;\n      }\n    });\n    return total;\n  };\n  const contextValue = {\n    cartItems,\n    addToCart,\n    removeFromCart,\n    getTotalCartItems,\n    getTotalCartAmount,\n    isLoggedIn,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"Y8mu+Hu7yD1PP/i3xZiyR0C5yiY=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","all_product","axios","jsxDEV","_jsxDEV","ShopContext","ShopContextProvider","props","_s","cartItems","setCartItems","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","post","headers","then","res","data","catch","console","error","login","setItem","logout","removeItem","addToCart","itemId","cartData","err","removeFromCart","getTotalCartItems","Object","values","reduce","a","b","getTotalCartAmount","total","entries","forEach","item","qty","p","find","pr","id","Number","new_price","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/E-Commerce/Frontend/src/Context/ShopContext.jsx"],"sourcesContent":["// import React, { createContext, useEffect, useState } from \"react\";\r\n// import all_product from \"../Components/Assets/all_product\";\r\n// import axios from \"axios\";\r\n\r\n// export const ShopContext = createContext(null);\r\n\r\n// const getDefaultCart = () => {\r\n//   let cart = {};\r\n//   for (let index = 0; index < all_product.length + 1; index++) {\r\n//     cart[index] = 0;\r\n//   }\r\n//   return cart;\r\n// };\r\n\r\n// const ShopContextProvider = (props) => {\r\n//   const [cartItems, setCartItems] = useState(getDefaultCart);\r\n\r\n//   const token = localStorage.getItem(\"auth-token\");\r\n\r\n//   // Fetch cart from backend on mount\r\n//   useEffect(() => {\r\n//     const fetchCart = async () => {\r\n//       try {\r\n//         const res = await axios.post(\"http://localhost:4001/getcart\", {}, {\r\n//           headers: { \"auth-token\": token },\r\n//         });\r\n//         setCartItems(res.data);\r\n//       } catch (err) {\r\n//         console.error(\"Error fetching cart:\", err);\r\n//       }\r\n//     };\r\n\r\n//     if (token) fetchCart();\r\n//   }, [token]);\r\n\r\n//   const addToCart = async (itemId) => {\r\n//     try {\r\n//       const res = await axios.post(\r\n//         \"http://localhost:4001/addtocart\",\r\n//         { itemId },\r\n//         { headers: { \"auth-token\": token } }\r\n//       );\r\n//       setCartItems(res.data.cartData);\r\n//     } catch (err) {\r\n//       console.error(\"Error adding to cart:\", err);\r\n//     }\r\n//   };\r\n\r\n//   const removeFromCart = async (itemId) => {\r\n//     try {\r\n//       const res = await axios.post(\r\n//         \"http://localhost:4001/removefromcart\",\r\n//         { itemId },\r\n//         { headers: { \"auth-token\": token } }\r\n//       );\r\n//       setCartItems(res.data.cartData);\r\n//     } catch (err) {\r\n//       console.error(\"Error removing from cart:\", err);\r\n//     }\r\n//   };\r\n\r\n//   const getTotalCartAmount = () => {\r\n//     let totalAmount = 0;\r\n//     for (const item in cartItems) {\r\n//       if (cartItems[item] > 0) {\r\n//         const itemInfo = all_product.find(\r\n//           (product) => product.id === Number(item)\r\n//         );\r\n//         if (itemInfo) {\r\n//           totalAmount += itemInfo.new_price * cartItems[item];\r\n//         }\r\n//       }\r\n//     }\r\n//     return totalAmount;\r\n//   };\r\n\r\n//   const getTotalCartItems = () => {\r\n//     let totalItem = 0;\r\n//     for (const item in cartItems) {\r\n//       totalItem += cartItems[item];\r\n//     }\r\n//     return totalItem;\r\n//   };\r\n\r\n//   const contextValue = {\r\n//     all_product,\r\n//     cartItems,\r\n//     addToCart,\r\n//     removeFromCart,\r\n//     getTotalCartAmount,\r\n//     getTotalCartItems,\r\n//   };\r\n\r\n//   return (\r\n//     <ShopContext.Provider value={contextValue}>\r\n//       {props.children}\r\n//     </ShopContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export default ShopContextProvider;\r\n\r\n\r\nimport React, { createContext, useEffect, useState } from \"react\";\r\nimport all_product from \"../Components/Assets/all_product\";\r\nimport axios from \"axios\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const [cartItems, setCartItems] = useState({});\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const token = localStorage.getItem(\"auth-token\");\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      setIsLoggedIn(true);\r\n      axios.post(\"http://localhost:4001/getcart\", {}, { headers: { \"auth-token\": token } })\r\n        .then(res => setCartItems(res.data))\r\n        .catch(console.error);\r\n    }\r\n  }, [token]);\r\n\r\n  const login = (token) => {\r\n    localStorage.setItem(\"auth-token\", token);\r\n    setIsLoggedIn(true);\r\n    axios.post(\"http://localhost:4001/getcart\", {}, { headers: { \"auth-token\": token } })\r\n      .then(res => setCartItems(res.data))\r\n      .catch(console.error);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"auth-token\");\r\n    setIsLoggedIn(false);\r\n    setCartItems({});\r\n  };\r\n\r\n  const addToCart = async (itemId) => {\r\n    if (!isLoggedIn) return;\r\n    try {\r\n      const res = await axios.post(\r\n        \"http://localhost:4001/addtocart\",\r\n        { itemId },\r\n        { headers: { \"auth-token\": token } }\r\n      );\r\n      setCartItems(res.data.cartData);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = async (itemId) => {\r\n    if (!isLoggedIn) return;\r\n    try {\r\n      const res = await axios.post(\r\n        \"http://localhost:4001/removefromcart\",\r\n        { itemId },\r\n        { headers: { \"auth-token\": token } }\r\n      );\r\n      setCartItems(res.data.cartData);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const getTotalCartItems = () =>\r\n    Object.values(cartItems).reduce((a, b) => a + b, 0);\r\n\r\n  const getTotalCartAmount = () => {\r\n    let total = 0;\r\n    Object.entries(cartItems).forEach(([item, qty]) => {\r\n      if (qty > 0) {\r\n        const p = all_product.find(pr => pr.id === Number(item));\r\n        total += (p?.new_price || 0) * qty;\r\n      }\r\n    });\r\n    return total;\r\n  };\r\n\r\n  const contextValue = {\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n    getTotalCartItems,\r\n    getTotalCartAmount,\r\n    isLoggedIn,\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}