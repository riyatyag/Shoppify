{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\E-Commerce\\\\Frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\n// import React, { createContext, useEffect, useState } from \"react\";\n// import all_product from \"../Components/Assets/all_product\";\n// import axios from \"axios\";\n\n// export const ShopContext = createContext(null);\n\n// const getDefaultCart = () => {\n//   let cart = {};\n//   for (let index = 0; index < all_product.length + 1; index++) {\n//     cart[index] = 0;\n//   }\n//   return cart;\n// };\n\n// const ShopContextProvider = (props) => {\n//   const [cartItems, setCartItems] = useState(getDefaultCart);\n\n//   const token = localStorage.getItem(\"auth-token\");\n\n//   // Fetch cart from backend on mount\n//   useEffect(() => {\n//     const fetchCart = async () => {\n//       try {\n//         const res = await axios.post(\"http://localhost:4001/getcart\", {}, {\n//           headers: { \"auth-token\": token },\n//         });\n//         setCartItems(res.data);\n//       } catch (err) {\n//         console.error(\"Error fetching cart:\", err);\n//       }\n//     };\n\n//     if (token) fetchCart();\n//   }, [token]);\n\n//   const addToCart = async (itemId) => {\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:4001/addtocart\",\n//         { itemId },\n//         { headers: { \"auth-token\": token } }\n//       );\n//       setCartItems(res.data.cartData);\n//     } catch (err) {\n//       console.error(\"Error adding to cart:\", err);\n//     }\n//   };\n\n//   const removeFromCart = async (itemId) => {\n//     try {\n//       const res = await axios.post(\n//         \"http://localhost:4001/removefromcart\",\n//         { itemId },\n//         { headers: { \"auth-token\": token } }\n//       );\n//       setCartItems(res.data.cartData);\n//     } catch (err) {\n//       console.error(\"Error removing from cart:\", err);\n//     }\n//   };\n\n//   const getTotalCartAmount = () => {\n//     let totalAmount = 0;\n//     for (const item in cartItems) {\n//       if (cartItems[item] > 0) {\n//         const itemInfo = all_product.find(\n//           (product) => product.id === Number(item)\n//         );\n//         if (itemInfo) {\n//           totalAmount += itemInfo.new_price * cartItems[item];\n//         }\n//       }\n//     }\n//     return totalAmount;\n//   };\n\n//   const getTotalCartItems = () => {\n//     let totalItem = 0;\n//     for (const item in cartItems) {\n//       totalItem += cartItems[item];\n//     }\n//     return totalItem;\n//   };\n\n//   const contextValue = {\n//     all_product,\n//     cartItems,\n//     addToCart,\n//     removeFromCart,\n//     getTotalCartAmount,\n//     getTotalCartItems,\n//   };\n\n//   return (\n//     <ShopContext.Provider value={contextValue}>\n//       {props.children}\n//     </ShopContext.Provider>\n//   );\n// };\n\n// export default ShopContextProvider;\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst ShopContextProvider = props => {\n  _s();\n  const [products, setProducts] = useState([]); // all products\n  const [cartItems, setCartItems] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const token = localStorage.getItem(\"auth-token\");\n\n  // Fetch product list on mount\n  useEffect(() => {\n    axios.get(\"http://localhost:4001/allproducts\").then(res => setProducts(res.data)).catch(console.error);\n  }, []);\n\n  // Fetch cart after login\n  useEffect(() => {\n    if (token) {\n      setIsLoggedIn(true);\n      axios.post(\"http://localhost:4001/getcart\", {}, {\n        headers: {\n          \"auth-token\": token\n        }\n      }).then(res => setCartItems(res.data)).catch(console.error);\n    }\n  }, [token]);\n  const login = (token, userData) => {\n    localStorage.setItem(\"auth-token\", token);\n    setIsLoggedIn(true);\n    axios.post(\"http://localhost:4001/getcart\", {}, {\n      headers: {\n        \"auth-token\": token\n      }\n    }).then(res => setCartItems(res.data)).catch(console.error);\n  };\n  const logout = () => {\n    localStorage.removeItem(\"auth-token\");\n    setIsLoggedIn(false);\n    setCartItems({});\n  };\n  const addToCart = async itemId => {\n    if (!isLoggedIn) return;\n    const res = await axios.post(\"http://localhost:4001/addtocart\", {\n      itemId\n    }, {\n      headers: {\n        \"auth-token\": token\n      }\n    });\n    setCartItems(res.data.cartData);\n  };\n  const removeFromCart = async itemId => {\n    if (!isLoggedIn) return;\n    const res = await axios.post(\"http://localhost:4001/removefromcart\", {\n      itemId\n    }, {\n      headers: {\n        \"auth-token\": token\n      }\n    });\n    setCartItems(res.data.cartData);\n  };\n  const getTotalCartItems = () => Object.values(cartItems).reduce((a, b) => a + b, 0);\n  const getTotalCartAmount = () => {\n    let total = 0;\n    for (const id in cartItems) {\n      const item = products.find(p => p.id === Number(id));\n      if (item) total += item.new_price * cartItems[id];\n    }\n    return total;\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: {\n      all_product: products,\n      // restore renamed array\n      cartItems,\n      addToCart,\n      removeFromCart,\n      getTotalCartItems,\n      getTotalCartAmount,\n      isLoggedIn,\n      login,\n      logout\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"S5odehz9Y12bXg8XHELYeI+Fk0s=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","jsxDEV","_jsxDEV","ShopContext","ShopContextProvider","props","_s","products","setProducts","cartItems","setCartItems","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","get","then","res","data","catch","console","error","post","headers","login","userData","setItem","logout","removeItem","addToCart","itemId","cartData","removeFromCart","getTotalCartItems","Object","values","reduce","a","b","getTotalCartAmount","total","id","item","find","p","Number","new_price","Provider","value","all_product","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/E-Commerce/Frontend/src/Context/ShopContext.jsx"],"sourcesContent":["// import React, { createContext, useEffect, useState } from \"react\";\r\n// import all_product from \"../Components/Assets/all_product\";\r\n// import axios from \"axios\";\r\n\r\n// export const ShopContext = createContext(null);\r\n\r\n// const getDefaultCart = () => {\r\n//   let cart = {};\r\n//   for (let index = 0; index < all_product.length + 1; index++) {\r\n//     cart[index] = 0;\r\n//   }\r\n//   return cart;\r\n// };\r\n\r\n// const ShopContextProvider = (props) => {\r\n//   const [cartItems, setCartItems] = useState(getDefaultCart);\r\n\r\n//   const token = localStorage.getItem(\"auth-token\");\r\n\r\n//   // Fetch cart from backend on mount\r\n//   useEffect(() => {\r\n//     const fetchCart = async () => {\r\n//       try {\r\n//         const res = await axios.post(\"http://localhost:4001/getcart\", {}, {\r\n//           headers: { \"auth-token\": token },\r\n//         });\r\n//         setCartItems(res.data);\r\n//       } catch (err) {\r\n//         console.error(\"Error fetching cart:\", err);\r\n//       }\r\n//     };\r\n\r\n//     if (token) fetchCart();\r\n//   }, [token]);\r\n\r\n//   const addToCart = async (itemId) => {\r\n//     try {\r\n//       const res = await axios.post(\r\n//         \"http://localhost:4001/addtocart\",\r\n//         { itemId },\r\n//         { headers: { \"auth-token\": token } }\r\n//       );\r\n//       setCartItems(res.data.cartData);\r\n//     } catch (err) {\r\n//       console.error(\"Error adding to cart:\", err);\r\n//     }\r\n//   };\r\n\r\n//   const removeFromCart = async (itemId) => {\r\n//     try {\r\n//       const res = await axios.post(\r\n//         \"http://localhost:4001/removefromcart\",\r\n//         { itemId },\r\n//         { headers: { \"auth-token\": token } }\r\n//       );\r\n//       setCartItems(res.data.cartData);\r\n//     } catch (err) {\r\n//       console.error(\"Error removing from cart:\", err);\r\n//     }\r\n//   };\r\n\r\n//   const getTotalCartAmount = () => {\r\n//     let totalAmount = 0;\r\n//     for (const item in cartItems) {\r\n//       if (cartItems[item] > 0) {\r\n//         const itemInfo = all_product.find(\r\n//           (product) => product.id === Number(item)\r\n//         );\r\n//         if (itemInfo) {\r\n//           totalAmount += itemInfo.new_price * cartItems[item];\r\n//         }\r\n//       }\r\n//     }\r\n//     return totalAmount;\r\n//   };\r\n\r\n//   const getTotalCartItems = () => {\r\n//     let totalItem = 0;\r\n//     for (const item in cartItems) {\r\n//       totalItem += cartItems[item];\r\n//     }\r\n//     return totalItem;\r\n//   };\r\n\r\n//   const contextValue = {\r\n//     all_product,\r\n//     cartItems,\r\n//     addToCart,\r\n//     removeFromCart,\r\n//     getTotalCartAmount,\r\n//     getTotalCartItems,\r\n//   };\r\n\r\n//   return (\r\n//     <ShopContext.Provider value={contextValue}>\r\n//       {props.children}\r\n//     </ShopContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export default ShopContextProvider;\r\n\r\nimport React, { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const [products, setProducts] = useState([]);     // all products\r\n  const [cartItems, setCartItems] = useState({});\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const token = localStorage.getItem(\"auth-token\");\r\n\r\n  // Fetch product list on mount\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:4001/allproducts\")\r\n      .then(res => setProducts(res.data))\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  // Fetch cart after login\r\n  useEffect(() => {\r\n    if (token) {\r\n      setIsLoggedIn(true);\r\n      axios.post(\"http://localhost:4001/getcart\", {}, {\r\n        headers: { \"auth-token\": token },\r\n      })\r\n      .then(res => setCartItems(res.data))\r\n      .catch(console.error);\r\n    }\r\n  }, [token]);\r\n\r\n  const login = (token, userData) => {\r\n    localStorage.setItem(\"auth-token\", token);\r\n    setIsLoggedIn(true);\r\n    axios.post(\"http://localhost:4001/getcart\", {}, {\r\n      headers: { \"auth-token\": token },\r\n    })\r\n    .then(res => setCartItems(res.data))\r\n    .catch(console.error);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"auth-token\");\r\n    setIsLoggedIn(false);\r\n    setCartItems({});\r\n  };\r\n\r\n  const addToCart = async (itemId) => {\r\n    if (!isLoggedIn) return;\r\n    const res = await axios.post(\"http://localhost:4001/addtocart\",\r\n      { itemId },\r\n      { headers: { \"auth-token\": token } }\r\n    );\r\n    setCartItems(res.data.cartData);\r\n  };\r\n\r\n  const removeFromCart = async (itemId) => {\r\n    if (!isLoggedIn) return;\r\n    const res = await axios.post(\"http://localhost:4001/removefromcart\",\r\n      { itemId },\r\n      { headers: { \"auth-token\": token } }\r\n    );\r\n    setCartItems(res.data.cartData);\r\n  };\r\n\r\n  const getTotalCartItems = () =>\r\n    Object.values(cartItems).reduce((a, b) => a + b, 0);\r\n\r\n  const getTotalCartAmount = () => {\r\n    let total = 0;\r\n    for (const id in cartItems) {\r\n      const item = products.find(p => p.id === Number(id));\r\n      if (item) total += item.new_price * cartItems[id];\r\n    }\r\n    return total;\r\n  };\r\n\r\n  return (\r\n    <ShopContext.Provider value={{\r\n      all_product: products,  // restore renamed array\r\n      cartItems,\r\n      addToCart,\r\n      removeFromCart,\r\n      getTotalCartItems,\r\n      getTotalCartAmount,\r\n      isLoggedIn,\r\n      login,\r\n      logout,\r\n    }}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}